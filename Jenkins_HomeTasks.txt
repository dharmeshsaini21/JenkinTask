## Practice

1. Install Jenkins.
2. open a GitHub account (if you don't have one already), create a new repository, and upload a shell or a batch script. Then configure a new Jenkins job to pull code from your repository and run the build.
3. Try to implement a CI workflow around it that builds, tests, and notifies
4. Prepare a jenkins file using scripted pipeline and do implement a CI workflow
5. Prepare a jenkins file using declarative pipeline and do implement a CI workflow.
6. Install Blue Ocean and try building a CI workflow for different branches.
7. Implement a CD workflow.
8. Create a new pipeline with the visual editor but instead of outputting dummy message try to make it do something useful (e.g. build a web application, deploy it on localhost)


### Theory
1. Describe in your own words what is Jenkins and what it is used for.
2. What do you need to have installed on your machine before installing Jenkins?
3. I recommended to install Jenkins LTS (Long Term Support). Why do you think I favour LTS over the latest Jenkins release? When would it be more appropriate to use the latest Jenkins release? If you are not familiar with the LTS concept, you can read more [here](https://en.wikipedia.org/wiki/Long-term_support).
4. Describe the difference between a job/project and a build.
5. What is a workspace?
6. What is a build trigger and how would you use it in a job?
7. What is a parameterized job and when would you use it?
8. What is meant by Pipeline as Code and Infrastructure as Code?
9. What are the benefits of using pipelines over normal build jobs in Jenkins?
10. What is a Jenkinsfile?
11. What are the differences between a declarative pipeline and a scripted pipeline?
12. Which are the advantages of using Blue Ocean?
13. What is a multibranch pipeline?
14. What is a pull request?